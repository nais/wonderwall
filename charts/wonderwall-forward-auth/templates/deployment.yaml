---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/search: "true"
  labels:
    {{- include "wonderwall-forward-auth.labels" . | nindent 4 }}
  name: {{ include "wonderwall-forward-auth.fullname" . }}
spec:
  replicas: 2
  selector:
    matchLabels:
      {{- include "wonderwall-forward-auth.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: {{ include "wonderwall-forward-auth.fullname" . }}
      labels:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- include "wonderwall-forward-auth.labels" . | nindent 8 }}
        {{ printf "%s-client" .Values.valkey.fullnameOverride }}: "true"
      name: {{ include "wonderwall-forward-auth.fullname" . }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - "{{ include "wonderwall-forward-auth.fullname" . }}"
                topologyKey: kubernetes.io/hostname
              weight: 10
      containers:
        - env:
          - name: WONDERWALL_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.valkey.fullnameOverride }}
                key: "valkey-password"
          envFrom:
            - secretRef:
                name: {{ include "wonderwall-forward-auth.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /oauth2/ping
              port: http
          name: {{ include "wonderwall-forward-auth.fullname" . }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /oauth2/ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1069
            runAsNonRoot: true
            runAsUser: 1069
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /tmp
              name: writable-tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: writable-tmp
